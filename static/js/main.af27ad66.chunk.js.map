{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","getFilteredTodos.ts","index.tsx"],"names":["TodoList","memo","todos","selectTodoId","onSelectTodo","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","selectedFilter","searchQuery","onSelectedFilter","onSearchQuery","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onClose","useState","ownerOfTodo","setownerOfTodo","useEffect","userId","user","href","email","name","App","setTodos","setSelectedTodoId","isLoading","setIsLoading","setSelectedFilter","setSearchQuery","todosFromServer","selectedTodo","useMemo","find","visibleTodos","preparedSearchQuery","toLowerCase","filter","isFilterMatch","isSearchQueryMatch","includes","getFilteredTodos","unselecedUser","useCallback","filterType","query","length","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af27ad66.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectTodoId: number,\n  onSelectTodo: (todoId: number) => void,\n};\n\nexport const TodoList: React.FC<Props> = memo(({\n  todos,\n  selectTodoId,\n  onSelectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className=\"\"\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={cn({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelectTodo(todo.id)}\n            >\n              <span className=\"icon\">\n                <i\n                  className={cn(\n                    'far',\n                    {\n                      'fa-eye': todo.id !== selectTodoId,\n                      'fa-eye-slash': todo.id === selectTodoId,\n                    },\n                  )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n));\n","import React, { memo } from 'react';\n\ntype Props = {\n  selectedFilter: string\n  searchQuery: string,\n  onSelectedFilter: (selectedFilter: string) => void,\n  onSearchQuery: (searchQuery: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = memo(({\n  selectedFilter,\n  searchQuery,\n  onSelectedFilter,\n  onSearchQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={selectedFilter}\n          onChange={(event) => {\n            onSelectedFilter(event.target.value);\n          }}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={searchQuery}\n        onChange={(event) => {\n          onSearchQuery(event.target.value);\n        }}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {searchQuery\n        && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onSearchQuery('')}\n            />\n          </span>\n        )}\n    </p>\n  </form>\n));\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { memo } from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = memo(() => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n));\n","import React, { memo, useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo | null,\n  onClose: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = memo(({ todo, onClose }) => {\n  const [ownerOfTodo, setownerOfTodo] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (todo) {\n      getUser(todo.userId)\n        .then(user => setownerOfTodo(user));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!ownerOfTodo ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                todo?.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>\n              }\n\n              {' by '}\n\n              <a href={`mailto:${ownerOfTodo.email}`}>\n                {ownerOfTodo.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { getFilteredTodos } from './getFilteredTodos';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectTodoId, setSelectedTodoId] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedFilter, setSelectedFilter] = useState('all');\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => setTodos(todosFromServer))\n      .then(() => setIsLoading(false));\n  }, []);\n\n  const selectedTodo = useMemo(() => {\n    return todos.find(todo => todo.id === selectTodoId) || null;\n  }, [selectTodoId, todos]);\n\n  const visibleTodos = useMemo(() => (\n    getFilteredTodos(todos, selectedFilter, searchQuery)\n  ), [todos, selectedFilter, searchQuery]);\n\n  const unselecedUser = useCallback(() => {\n    setSelectedTodoId(0);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectedFilter={selectedFilter}\n                searchQuery={searchQuery}\n                onSelectedFilter={(filterType) => setSelectedFilter(filterType)}\n                onSearchQuery={(query) => setSearchQuery(query)}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n\n              {todos.length > 0\n                && (\n                  <TodoList\n                    todos={visibleTodos}\n                    onSelectTodo={(todoId) => setSelectedTodoId(todoId)}\n                    selectTodoId={selectTodoId}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectTodoId !== 0\n        && (\n          <TodoModal\n            todo={selectedTodo}\n            onClose={unselecedUser}\n          />\n        )}\n    </>\n  );\n};\n","import { Todo } from './types/Todo';\n\nexport const getFilteredTodos = (\n  todos: Todo[],\n  selectedFilter: string,\n  searchQuery: string,\n) => {\n  if (selectedFilter !== 'all' || searchQuery) {\n    const preparedSearchQuery = searchQuery.toLowerCase();\n\n    return todos.filter(todo => {\n      const isSearchQueryMatch = todo.title.toLowerCase()\n        .includes(preparedSearchQuery);\n      let isFilterMatch;\n\n      switch (selectedFilter) {\n        case 'active':\n          isFilterMatch = todo.completed === false;\n          break;\n\n        case 'completed':\n          isFilterMatch = todo.completed === true;\n          break;\n\n        default:\n          isFilterMatch = true;\n          break;\n      }\n\n      return isFilterMatch && isSearchQueryMatch;\n    });\n  }\n\n  return todos;\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}